#!/bin/bash
# WireGuard Setup Script with automatic server key generation and multi-client support

set -e

WG_CONF="/etc/wireguard/wg0.conf"
WG_DIR="/etc/wireguard"
WG_PORT=51820
WG_SUBNET="10.8.0.0/24"
CLIENT_DIR="$WG_DIR/clients"

# Ensure directories exist
sudo mkdir -p $WG_DIR $CLIENT_DIR
sudo chmod 700 $WG_DIR $CLIENT_DIR

# Install dependencies if missing
sudo apt update
sudo apt install -y wireguard qrencode iptables-persistent ufw

# Generate server keys if missing
if [ ! -f $WG_DIR/server_private.key ]; then
    echo "Generating WireGuard server keys..."
    sudo wg genkey | sudo tee $WG_DIR/server_private.key | sudo wg pubkey > $WG_DIR/server_public.key
fi

SERVER_PRIV=$(sudo cat $WG_DIR/server_private.key)

# Create wg0.conf if missing
if [ ! -f $WG_CONF ]; then
    echo "Creating wg0.conf..."
    sudo tee $WG_CONF > /dev/null <<EOF
[Interface]
Address = 10.8.0.1/24
ListenPort = $WG_PORT
PrivateKey = $SERVER_PRIV
SaveConfig = true

# NAT for all client traffic
PostUp = iptables -t nat -A POSTROUTING -o $(ip route get 1.1.1.1 | awk '{print $5; exit}') -j MASQUERADE
PostDown = iptables -t nat -D POSTROUTING -o $(ip route get 1.1.1.1 | awk '{print $5; exit}') -j MASQUERADE
EOF
fi

# Enable IP forwarding
sudo sysctl -w net.ipv4.ip_forward=1
sudo sysctl -w net.ipv6.conf.all.forwarding=1

# Bring up WireGuard interface
sudo wg-quick up wg0 || true

# Enable systemd service
sudo systemctl enable wg-quick@wg0
sudo systemctl start wg-quick@wg0 || true

# Function to add a client
add_client() {
    CLIENT_NAME=$1
    if [ -z "$CLIENT_NAME" ]; then
        echo "Usage: $0 add <clientname>"
        exit 1
    fi

    CLIENT_PRIV=$(wg genkey)
    CLIENT_PUB=$(echo "$CLIENT_PRIV" | wg pubkey)
    SERVER_PUB=$(sudo cat $WG_DIR/server_public.key)

    # Find next available client IP
    LAST_IP=$(grep "Address" $WG_CONF | awk -F'[/.]' '{print $4}' | sort -n | tail -1)
    if [ -z "$LAST_IP" ]; then
        CLIENT_IP=2
    else
        CLIENT_IP=$((LAST_IP+1))
    fi

    CLIENT_CONF="$CLIENT_DIR/$CLIENT_NAME.conf"
    sudo tee $CLIENT_CONF > /dev/null <<EOF
[Interface]
PrivateKey = $CLIENT_PRIV
Address = 10.8.0.$CLIENT_IP/24
DNS = 1.1.1.1

[Peer]
PublicKey = $SERVER_PUB
Endpoint = $(curl -s ifconfig.me):$WG_PORT
AllowedIPs = 0.0.0.0/0, ::/0
EOF

    # Add client to server
    sudo wg set wg0 peer $CLIENT_PUB allowed-ips 10.8.0.$CLIENT_IP/32

    echo "Client $CLIENT_NAME added. QR code:"
    qrencode -t ansiutf8 < $CLIENT_CONF
}

# Function to list clients
list_clients() {
    ls $CLIENT_DIR
}

# Function to remove client
remove_client() {
    CLIENT_NAME=$1
    CLIENT_CONF="$CLIENT_DIR/$CLIENT_NAME.conf"
    if [ ! -f "$CLIENT_CONF" ]; then
        echo "Client $CLIENT_NAME does not exist."
        exit 1
    fi
    CLIENT_PUB=$(grep "PrivateKey" $CLIENT_CONF | wg pubkey)
    sudo wg set wg0 peer $CLIENT_PUB remove
    sudo rm -f "$CLIENT_CONF"
    echo "Client $CLIENT_NAME removed."
}

# Main
case "$1" in
    init)
        echo "WireGuard server is already initialized."
        ;;
    add)
        add_client "$2"
        ;;
    list)
        list_clients
        ;;
    remove)
        remove_client "$2"
        ;;
    *)
        echo "Usage: $0 {init|add <client>|list|remove <client>}"
        exit 1
        ;;
esac
